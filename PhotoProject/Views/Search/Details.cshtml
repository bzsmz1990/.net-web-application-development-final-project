@model DataLayer.Picture

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>
    <div>
        <h4>Picture</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Album.UserId)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Album.UserId)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Owner.FirstName)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Owner.FirstName)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Cost)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Cost)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Location)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Location)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.UploadTime)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.UploadTime)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.NumberOfLikes)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.NumberOfLikes)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.HasBeenReported)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.HasBeenReported)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.OriginalImg)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.OriginalImg)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.CompressImg)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.CompressImg)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.PictureType)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.PictureType)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Hidden)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Hidden)
            </dd>
    
        </dl>
    </div>
    <p>
        <a href="#login_form" id="login_pop">Edit</a>
        @Html.ActionLink("Back to List", "Index")
    </p>


    <a href="#x" class="overlay" id="login_form"></a>
    <div class="popup">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Picture</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.OwnerId, "OwnerId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UploadTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UploadTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UploadTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NumberOfLikes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumberOfLikes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfLikes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HasBeenReported, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.HasBeenReported)
                            @Html.ValidationMessageFor(model => model.HasBeenReported, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OriginalImg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OriginalImg, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OriginalImg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompressImg, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompressImg, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompressImg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PictureType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PictureType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PictureType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Hidden)
                            @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AlbumId, "AlbumId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AlbumId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AlbumId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>


</body>
</html>
