@model PhotoProject.ViewModels.GalleryViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Gallery";
}
<div class="gallerypage">

    <div class="col-2">
        <div class="profileinfo">
            <div class="userinfo">
                <img src="https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcRVOdD-sjx4UA-Mym9oOQ8hQRrmCm8imPkYXWefj9a_dsnvXuzZ" style="width:110px;height:110px;border-radius: 15px 15px 15px 15px">
                <h1>@Model.Owner.FullName</h1>
                <h2>Account: @Model.Owner.AccountBalance</h2>
                @if (!ViewBag.isOwner)
                {
                    if (ViewBag.FollowAction)
                    {
                        <div class="userbuttons2">
                            <p class="userpagebutton">
                                @Html.ActionLink("Unfollow", "FollowUser", new { @id = Model.Owner.UserId }, htmlAttributes: new { @class = "button2" })
                            </p>
                        </div>
                    }
                    else
                    {
                        <div class="userbuttons2">
                            @Html.ActionLink("Follow", "FollowUser", new { @id = Model.Owner.UserId }, htmlAttributes: new { @class = "button2" })
                        </div>
                    }

                }
            </div>
            @if (ViewBag.isOwner)
            {
                <div class="userbuttons">
                    <p class="userpagebutton">
                        @Html.ActionLink("Manage Account", "Index", "Manage", routeValues: null, htmlAttributes: new { @class = "button1" })
                    </p>
                    <p class="userpagebutton">
                        @Html.ActionLink("Upload Image", "Upload", "Upload", routeValues: null, htmlAttributes: new { @class = "button1" })
                    </p>
                    <p class="userpagebutton">
                        @Html.ActionLink("Create Album", "CreateNewAlbum", "UserHome", routeValues: null, htmlAttributes: new { @class = "button1" })
                    </p>
                    <p class="userpagebutton">
                        @Html.ActionLink("Purchased Pictures", "OwnedPictures", "UserHome", routeValues: null, htmlAttributes: new { @class = "button1" })
                    </p>
                </div>
            }
        </div>
    </div>
    <div class="col-4">
        <div class="uploadedimages">
            <h4>@Model.Owner.FirstName's uploaded pictures</h4>



            <div class="myWorkContent1">
                <div id="insideDiv1">
                    @{
                        List<DataLayer.Picture> ownpicList = (List<DataLayer.Picture>)Model.OwnedPictures;
                        if (ownpicList == null)
                        {
                            <h3>No pictures have been uploaded yet.</h3>
                        }
                        else
                        {

                            for (int i = 0; i < ownpicList.Count(); i++)
                            {

                                <a href='@Url.Action("Details", "PictureDetails", new { id = @ownpicList[i].Id })'>
                                    <img src="data:image/jpeg;base64, @Convert.ToBase64String(ownpicList[i].CompressImg, 0, ownpicList[i].CompressImg.Length)" style="width:150px;height:150px;border-radius: 15px 15px 15px 15px; display:inline;" />
                                </a>

                            }
                        }
                    }
                </div>
            </div>
        </div>
        <br />
        <br />

        <div class="uploadedimages">
            <h4>@Model.Owner.FirstName's albums</h4>
            <div class="myWorkContent1">
                <div id="insideDiv1">
                    @{
                        List<DataLayer.Album> albums = Model.Owner.Albums.ToList();
                        if (albums == null)
                        {
                            <h3>No albums have been created yet</h3>
                        }
                        else
                        {
                            foreach (DataLayer.Album alb in albums)
                            {
                                <div class="imagebox">
                                    <a href='@Url.Action("AlbumDetails", "AlbumDetails", new { id = alb.Id }, null)'>

                                        <img src="data:image/jpeg;base64, @Convert.ToBase64String(@alb.Pictures.LastOrDefault().CompressImg, 0, @alb.Pictures.LastOrDefault().CompressImg.Length)" style="width:150px;height:150px;border-radius: 15px 15px 15px 15px; display:inline;" />
                                        <p>@Html.ActionLink(alb.Name, "AlbumDetails", "AlbumDetails", new { id = alb.Id }, null)</p>

                                    </a>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <br />
        <br />

        <div class="uploadedimages">
            <h4>Pictures @Model.Owner.FirstName liked</h4>
            <div class="myWorkContent1">
                <div id="insideDiv1">
                    @{
                        List<DataLayer.Picture> likedpicList = (List<DataLayer.Picture>)Model.LikedPictures;
                        if (likedpicList == null)
                        {
                            <h3>The user didn't like any pictures yet</h3>
                        }
                        else
                        {
                            for (int i = 0; i < likedpicList.Count(); i++)
                            {
                                <a href='@Url.Action("Details", "PictureDetails", new { id = @likedpicList[i].Id })'>
                                    <img src="data:image/jpeg;base64, @Convert.ToBase64String(likedpicList[i].CompressImg, 0, likedpicList[i].CompressImg.Length)" style="width:150px;height:150px;border-radius: 15px 15px 15px 15px; display:inline;" />
                                </a>
                            }
                        }
                    }

                </div>
            </div>
        </div>


        <div class="uploadedimages">
            <h4>@Model.Owner.FirstName is following</h4>
            <div class="myWorkContent">
                <div id="insideDiv">
                    @{
                        List<DataLayer.UserInfo> followinglist = (List<DataLayer.UserInfo>)Model.Following;
                        if (followinglist == null)
                        {
                            <h3>There are no users being followed</h3>
                        }
                        else
                        {
                            foreach (DataLayer.UserInfo user in followinglist)
                            {
                                <li>
                                    @Html.ActionLink(user.FullName, "Gallery", "UserHome", new { id = user.UserId })
                                </li>
                            }
                        }
                    }
                </div>
            </div>
        </div>
        <br />
        <br />
    </div>
</div>




