@model DataLayer.Picture

@{
    ViewBag.Title = "Upload";
}

<h2>Upload</h2>


    @using (Html.BeginForm("Upload", "Upload", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
    <div class="uploadpage">
        <div class="form-horizontal">
            <h4>upload your image</h4>
            <div class="col-2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })<span class="required">*</span>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })<span class="required">*</span>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, 8, 69, new { htmlAttributes = new { @class = "resizer" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Tags, 5, 69, new { htmlAttributes = new { @class = "resizer" } })
                        @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="file" name="Picture" id="Picture" accept="image/*" onchange="loadFile(event)" /> <br />
                        <img id="output" width="400px" height="auto" />
                        <script>
                            var loadFile = function (event) {
                                var output = document.getElementById('output');
                                output.src = URL.createObjectURL(event.target.files[0]);
                            };
                        </script>
                    </div>
                </div>
                
                <p class="form-row">
                    <input type="hidden" id="_wpnonce" name="_wpnonce" value="d9c35f1bca" />
                    <input type="hidden" name="_wp_http_referer" value="/mein-account/" />
                    <input type="submit" class="button" name="Register" value="Upload the Image" />
                </p>
            </div>
        </div>
    </div>
    }

    
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
